# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['../desktop_main.py'],
    pathex=[],
    binaries=[],
    datas=[
        ('../templates', 'templates'),
        ('../static', 'static'),
        ('../data', 'data'),
        ('../ahoy', 'ahoy'),
    ],
    hiddenimports=[
        'flask',
        'pywebview',
        'webview',
        'structlog',
        'bcrypt',
        'flask_limiter',
        'flask_cors',
        'flask_login',
        'flask_bcrypt',
        'flask_wtf',
        'sqlalchemy',
        'alembic',
        'psycopg',
        'sentry_sdk',
        'werkzeug',
        'jinja2',
        'markupsafe',
        'itsdangerous',
        'click',
        'python_dotenv',
        'gunicorn',
        'requests',
        'marshmallow',
        'pyjwt',
        'email_validator',
        'limits',
        'python_json_logger',
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='AhoyIndieMedia',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
    icon='packaging/icons/ahoy.ico' if os.name == 'nt' else 'packaging/icons/ahoy.icns',
)

app = BUNDLE(
    exe,
    name='AhoyIndieMedia.app',
    icon='packaging/icons/ahoy.icns',
    bundle_identifier='com.ahoyindiemedia.desktop',
    info_plist={
        'CFBundleName': 'Ahoy Indie Media',
        'CFBundleDisplayName': 'Ahoy Indie Media',
        'CFBundleVersion': '0.1.0',
        'CFBundleShortVersionString': '0.1.0',
        'CFBundlePackageType': 'APPL',
        'CFBundleSignature': '????',
        'NSHighResolutionCapable': True,
        'NSRequiresAquaSystemAppearance': False,
    },
)
